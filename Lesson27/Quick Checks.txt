Quick check 27.1 answers:
1 - How are records represented in C#?
A - As classes whose only constructor mandates all the properties be informed upfront.

2 - Why are discriminated unions sometimes difficult to reason about in C#?
A - Mostly cause of a lack of proper pattern matching facilities. Since a DU is represented as a class hierarchy in C#, but it does not let you cast implicitly between it's types, it also demands that, in order to access it's members, the caller cast it to the correct type first (the necessary facilities are presented in the base DU class, in the form of isType methods).

Quick check 27.2 answers:
1 - How are modules declared in F# rendered in C#?
A - As static classes.

2 - Can you use F#-declared curried functions in C#?
A - Yes, but the experience is a terrifying nightmare.

Quick check 27.3 answers:
1 - What do tuples render as in C#?
A - As the System.Tuple type.

2 - What is the purpose of the [<CLIMutable>] attribute?
A - To change the way an f# record IL is generated, enabling mutation through a default constructor and properties with getters and setters.